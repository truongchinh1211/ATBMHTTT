/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Cipher;

import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import org.jfree.chart.renderer.category.StandardBarPainter;

/**
 *
 * @author Bum
 */
public class RSACipher {
    public static final BigInteger server_key_e = new BigInteger(
"18352090444632752265774309621001352693759060962194772380486726900419828075918068098600718494615550746093095562645917518502867417512858878868675509358776326939018339386690953656286579748808818606697886260443274743869729486723253865579500004032719507533221481406112882845909329705668570207937919701113913065133364400807047546480007820326437062509571900665719362683856824299422904379048608366459032751406611565513305119112116026084182819013772256103567100898387851875137235740016131811726719892796526332898484106667480345667686914691681518907880950021317783889940395377546494303197737593882752254109373773243183270603379"
    );
    
    public static final BigInteger server_key_n = new BigInteger("830162323633830698614565732007132580562717597937663196726876951078881025676466590366463216023373441068238333556587552067899018887494375156824572534692953969635226254273048881072349991317025545176973748423133321421214367683556941929832145664889973245220710367836881390846148713446086190149223797512008809610429401863691207854576042212906875003612404689001954707003516086173925942153700727714671657984676790882956629173511153248306651259919984260055861031585159200577196230634679273946217130979283675653423776673804213897596778330625634868129898520031611239980166671385743995494495828774339086200240221267287086193618419721221526043476056339261398242332862981388652306548169841989358517233495850242203104985147433336720575893640543947572732726040354789064277879436301955440023899253430155361511009537023105933709992177770598415587456913046301629662754320482944121229013963282558006194281843207505038947592436870474409259040942854857202955904924429614787666525094889369665799091436246458929424997056917995957435132300621308670729418245555841053233630142599766490968187205839046213522162515908341619149449751181649936296050079141017407266483305845912450125375352224574003369927864835437395096728361932293078941848030444949635847889621773");
    
    public String encrypt(String mess,BigInteger e,BigInteger n){
        byte[] message = mess.getBytes(StandardCharsets.UTF_8);
        BigInteger plain = new BigInteger(message);
        BigInteger cipher = plain.modPow(e,n);
        return new String(cipher.toByteArray());
    }
}
